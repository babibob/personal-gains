global:
  resolve_timeout: 5m
  http_config:
    follow_redirects: true
inhibit_rules:
- equal:
  - namespace
  - alertname
  source_matchers:
  - "severity = critical"
  target_matchers:
  - "severity =~ warning|info"
- equal:
  - namespace
  - alertname
  source_matchers:
  - "severity = warning"
  target_matchers:
  - "severity = info"
- equal:
  - namespace
  source_matchers:
  - "alertname = InfoInhibitor"
  target_matchers:
  - "severity = info"
route:
  group_by:
  - namespace
  group_wait: 30s
  group_interval: 5m
  repeat_interval: 4h
  receiver: telegram
  routes:
    - receiver: 'null'
      matchers:
        - alertname =~ "InfoInhibitor|Watchdog"
    - receiver: telegram
      continue: true
# send alerts in separate telegram posts
      group_by: ['...']
      group_wait: 5s
    - receiver: sb_redmine
receivers:
  - name: 'null'
# debug receivers
  - name: default-telegram
    telegram_configs:
      - api_url: https://api.telegram.org
        bot_token: {{ __vault__prom_stack['telegram_bot_token'] }}
        chat_id: {{ __vault__prom_stack['telegram_chat_id'] }}
        disable_notifications: false
        send_resolved: true
        parse_mode: ""
        message: '{{ "{{" }} template "telegram.default.message" . {{ "}}" }}'
  - name: telegram
    telegram_configs:
      - api_url: https://api.telegram.org
        bot_token: {{ __vault__prom_stack['telegram_bot_token'] }}
        chat_id: {{ __vault__prom_stack['telegram_chat_id'] }}
        disable_notifications: false
        send_resolved: true
        parse_mode: HTML
        message: '{{ "{{" }} template "telegram.message" . {{ "}}" }}'
  - name: 'sb_redmine'
    webhook_configs:
    - url: https://<URL>
      http_config:
        bearer_token: {{ __vault__prom_stack['sb_factory_token'] }}
templates:
  - '/etc/alertmanager/config/*.tmpl'
