---
- name: Check role requirements
  assert:
    that:
      - logging_operator_chart_version|length > 0

- name: Set URL for chart repo
  include_vars: "{{ logging_operator_chart_repo }}_chart_repo.yml"

- name: Setup kube-logging Helm repo
  kubernetes.core.helm_repository:
    name: kube-logging
    repo_url: "{{ logging_operator_chart_repo_url }}"
  environment: "{{ logging_operator_helm_environment }}"

- name: Ensure required dirs exists
  file:
    path: "{{ item.path }}"
    state: directory
    mode: "{{ item.mode|d('0755') }}"
  loop:
    - path: "{{ logging_operator_dirs.downloads }}/{{ logging_operator_chart_version }}"

- name: Pull logging-operator chart archive
  command: >
    helm pull kube-logging/logging-operator --version "{{ logging_operator_chart_version }}"
  args:
    chdir: "{{ logging_operator_dirs.downloads }}"
    creates: "{{ logging_operator_dirs.downloads }}/logging-operator-{{ logging_operator_chart_version }}.tgz"
  environment: "{{ logging_operator_helm_environment }}"

- name: Unpack logging-operator chart archive
  unarchive:
    src: >-
      {{ logging_operator_dirs.downloads }}/logging-operator-{{ logging_operator_chart_version }}.tgz
    remote_src: true
    dest: "{{ logging_operator_dirs.downloads }}/{{ logging_operator_chart_version }}"
    extra_opts:
      - '--strip-components=1'
    creates: "{{ logging_operator_dirs.downloads }}/{{ logging_operator_chart_version }}/values.yaml"

- name: Get CRDs file list
  find:
    paths: "{{ logging_operator_dirs.downloads }}/{{ logging_operator_chart_version }}/crds"
  register: __logging_operator_crds_find

- name: Apply logging-operator CRDs
  command:
    argv:
      - kubectl
      - apply
      - --server-side
      - --force-conflicts
      - -f
      - "{{ item.path }}"
  loop: "{{ __logging_operator_crds_find.files }}"
  loop_control:
    label: "{{ item.path }}"
  changed_when: false

- name: Create namespace for logging-operator
  kubernetes.core.k8s:
    api_version: v1
    kind: Namespace
    name: "{{ logging_operator_namespace.name|d(logging_operator_default_namespace) }}"
    resource_definition:
      metadata:
        labels: "{{ logging_operator_namespace.labels|d({}) }}"
  when: logging_operator_namespace.create|d(true)

- name: Install logging-operator Helm chart release
  kubernetes.core.helm:
    name: "{{ logging_operator_helm_release_name }}"
    chart_ref: kube-logging/logging-operator
    release_namespace: "{{ logging_operator_namespace.name|d(logging_operator_default_namespace) }}"
    release_values: >-
      {{ logging_operator_default_values
      |combine(logging_operator_values, recursive=True)
      |combine(logging_operator_values_extra, recursive=True) }}
    chart_version: "{{ logging_operator_chart_version }}"
    atomic: "{{ logging_operator_helm_atomic|ternary('yes', 'no') }}"
    skip_crds: true
    wait: true
  environment: "{{ logging_operator_helm_environment }}"

- name: Install logging CRD chart
  include_tasks: logging.yml
  when:
    - logging_operator_logging_enable
...
