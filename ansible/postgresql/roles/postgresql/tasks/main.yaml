---
- name: Install dependencies
  apt:
    name:
    - apt-transport-https
    - ca-certificates
    - curl
    - software-properties-common
    - gnupg-agent
    state: present
    update_cache: true

- name: Add an apt signing key for Docker
  apt_key:
    url: "https://download.docker.com/linux/{{ ansible_os_family |lower }}/gpg"
    state: present

- name: Add apt repository for stable version
  apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/{{ ansible_os_family |lower }} {{ ansible_distribution_release }} stable"
    state: present

- name: Install Docker
  apt:
    name:
    - docker-ce
    - docker-ce-cli
    - containerd.io
    state: present
    update_cache: true

- name: Download latest docker-compose
  block:

  - name: Latest version docker Docker-compose
    uri:
      url: https://api.github.com/repos/docker/compose/releases/latest
      body_format: json
    register: page

  - name: Install latest docker-compose
    get_url:
      url: "https://github.com/docker/compose/releases/download/{{ page.json.tag_name }}/docker-compose-linux-x86_64"
      dest: ~/docker-compose
    #   mode: '0755'

  - name: Check docker-compose exists
    stat: path=~/docker-compose
    register: docker_compose

  - name: Move docker-compose to /usr/local/bin/docker-compose
    copy:
      remote_src: true
      src: ~/docker-compose
      dest: /usr/local/bin/docker-compose
      mode: '+x'
    when: docker_compose.stat.exists

- name: Install Master
  import_tasks: 'setup_pg_master.yaml'
  when: pg_master is defined

- name: Get Master address
  shell: "echo {{ ansible_default_ipv4.address }}"
  register: master_node
  when: pg_master is defined

- name: Get Master address to variable
  set_fact:
    master_address: "{{ master_node.stdout }}"
  run_once: true

- name: Show Master address
  debug:
    var: master_address

- name: Install Slave
  import_tasks: 'setup_pg_slave.yaml'
  when: pg_slave is defined
...
